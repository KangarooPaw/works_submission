//=============================================================================
//背景処理[bg.cpp]
//=============================================================================

//=============================================================================
//インクルードファイル
//=============================================================================
#include "bg.h"
#include "scene2d.h"
#include "manager.h"
#include "renderer.h"

//=============================================================================
//スタティック変数初期化
//=============================================================================
LPDIRECT3DTEXTURE9 CBg::m_pTexture = NULL;

//=============================================================================
//コンストラクタ
//=============================================================================
CBg::CBg(int nPriority)
{
	m_pScene2D = NULL;
}

//=============================================================================
//デストラクタ
//=============================================================================
CBg::~CBg()
{

}

//=============================================================================
//テクスチャの読み込み
//=============================================================================
HRESULT CBg::Load(void)
{
	LPDIRECT3DDEVICE9 pDevice;
	pDevice = CManager::GetRenderer()->GetDevice();

	// テクスチャの生成
	D3DXCreateTextureFromFile(pDevice,			// デバイスへのポインタ
		TEXTURE_BG,								// ファイルの名前
		&m_pTexture);
	return S_OK;
}

//=============================================================================
// テクスチャの破棄
//=============================================================================
void CBg::Unload(void)
{
		if (m_pTexture != NULL)
		{
			m_pTexture->Release();
			m_pTexture = NULL;
		}
}

//=============================================================================
//生成処理
//=============================================================================
CBg * CBg::Create(float nPosX, float nPosY)
{
	CBg *pBg;
	pBg = new CBg;
	pBg->Init(nPosX, nPosY,BG_WIDTH,BG_HEIGHT);
	return pBg;
}

//=============================================================================
//初期化処理
//=============================================================================
HRESULT CBg::Init(float nPosX, float nPosY, int nPolygonWidth, int nPolygonHeight)
{
	m_pScene2D = new CScene2D;	
	m_pScene2D->Init(nPosX, nPosY, nPolygonWidth, nPolygonHeight);
	m_pScene2D->BindTexture(m_pTexture);

	return S_OK;
}

//=============================================================================
//終了処理
//=============================================================================
void CBg::Uninit(void)
{
	if (m_pScene2D != NULL)
	{
		m_pScene2D->Uninit();
		m_pScene2D = NULL;
	}
	Release();
}

//=============================================================================
//更新処理
//=============================================================================
void CBg::Update(void)
{

}

//=============================================================================
//描画処理
//=============================================================================
void CBg::Draw(void)
{

}
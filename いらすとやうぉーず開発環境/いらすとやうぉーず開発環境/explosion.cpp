//=============================================================================
//爆発処理[explosion.cpp]
//=============================================================================

//=============================================================================
//インクルードファイル
//=============================================================================
#include "renderer.h"
#include "manager.h"
#include "explosion.h"

//=============================================================================
//スタティック変数初期化
//=============================================================================
LPDIRECT3DTEXTURE9 CExplosion::m_pTexture = NULL;

//=============================================================================
//コンストラクタ
//=============================================================================
CExplosion::CExplosion()
{
	m_nCounterAnim = 0;
	m_nPatternAnim = 0;
}
//=============================================================================
//デストラクタ
//=============================================================================
CExplosion::~CExplosion()
{

}

//-------------------------------------------------
//生成処理
//-------------------------------------------------
CExplosion * CExplosion::Create(float nPosX, float nPosY)
{
	CExplosion *pExplosion;
	pExplosion = new CExplosion;
	pExplosion->Init(nPosX, nPosY);
	return pExplosion;
}

//=============================================================================
//テクスチャの読み込み
//=============================================================================
HRESULT CExplosion::Load(void)
{
	LPDIRECT3DDEVICE9 pDevice;
	pDevice = CManager::GetRenderer()->GetDevice();

	// テクスチャの生成
	D3DXCreateTextureFromFile(pDevice,				// デバイスへのポインタ
		TEXTURE_EXPLOSION,					// ファイルの名前
		&m_pTexture);
	return S_OK;
}

//=============================================================================
// テクスチャの破棄
//=============================================================================
void CExplosion::Unload(void)
{
	// テクスチャの破棄
	if (m_pTexture != NULL)
	{
		m_pTexture->Release();
		m_pTexture = NULL;
	}
}

//=============================================================================
//初期化処理
//=============================================================================
HRESULT CExplosion::Init(float nPosX, float nPosY)
{
	CScene2D::Init(nPosX, nPosY,EXPLOSION_WIDTH,EXPLOSION_HEIGHT);
	CScene2D::BindTexture(m_pTexture);
	return S_OK;
}

//=============================================================================
//終了処理
//=============================================================================
void CExplosion::Uninit(void)
{
	CScene2D::Uninit();
}

//=============================================================================
//更新処理
//=============================================================================
void CExplosion::Update(void)
{
	m_nCounterAnim++;
	if (m_nCounterAnim % 8 == 0)
	{
		m_nPatternAnim++;
		CScene2D::SetAnimation(m_nPatternAnim);
		if (m_nPatternAnim > 8)
		{
			Uninit();
		}
	}
}

//=============================================================================
//描画処理
//=============================================================================
void CExplosion::Draw(void)
{
	CScene2D::Draw();
}
